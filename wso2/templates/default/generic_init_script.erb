#!/bin/bash
# /etc/init.d/<%=@script_name%>: start the <%=@script_name%>  daemon.

# chkconfig: 345 80 20
# description: <%=@script_name%> daemon
# processname: <%=@script_name%>

HOME=<%=@install_dir%>
PIDFILE=$HOME/wso2carbon.pid
USER=<%=@service_user%>

PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin

PROG=<%=@script_name%>
DESC="<%=@script_name%> daemon"

if [ -e "$PIDFILE" ]; then
  PID=`cat "$PIDFILE"`
fi

RETVAL=0

# detect the distribution:
if [ -f /etc/redhat-release -o -f /etc/fedora-release ] ; then
  DISTRIBUTION="redhat"
  elif [ -f /etc/SuSE-release ] ; then
  DISTRIBUTION="suse"
  elif [ -f /etc/debian_version ] ; then
  DISTRIBUTION="debian"
else
  DISTRIBUTION="debian"
fi

# Source function library.
[ "$DISTRIBUTION" = "redhat" ] && . /etc/init.d/functions
[ "$DISTRIBUTION" = "suse" ] && . /etc/rc.status

if [ "$DISTRIBUTION" = "suse" ] ; then
    echo_success() {
        rc_status -v
    }
    echo_failure() {
        rc_status -v
    }
    success() {
        echo_success
    }
    failure() {
        echo_success
    }
elif [ "$DISTRIBUTION" = "debian" ] ; then
    echo_success() {
        echo ok
    }
    echo_failure() {
        echo failed
    }
    success() {
        echo_success
    }
    failure() {
        echo_success
    }
fi

status() {
# Status should exit with 0 return code if running and 1 if not
  RETVAL=0
  if [ -f "$PIDFILE" ]; then
    if [ -z "`ps axf | grep $PID | grep -v grep`" ]; then
      echo "Process dead but pidfile exists"
      RETVAL=1
    else
      echo "Running"
    fi
  else
    echo "Service not running"
    RETVAL=1
  fi

  return $RETVAL
}

start() {
    ulimit -n 65536
    ulimit -s 10240
    ulimit -c unlimited
    echo -n $"Starting $PROG: "
    cd $HOME
    su - $USER -c "nohup $HOME/<%=@init_script%> >> ./logs/<%=@script_name%>.out 2>> ./logs/<%=@script_name%>.err" &
    RETVAL=$?
    [ $RETVAL -eq 0 ] && echo_success
    [ $RETVAL -ne 0 ] && echo_failure
    echo
    return $RETVAL
}

stop() {
    echo $"Stopping $PROG: "
    for pgid in `ps ax -o  "pid pgid args" | \grep '<%=@init_script%>' | grep -v grep | awk '{print $2}'`; do
        for pid in `ps ax -o  "pid pgid args" | \grep -E $"[0-9]+ +$pgid +" | \grep java | awk '{print $1}'`; do
            echo -n $"Stopping $PROG($pid): "
            kill $pid
            RETVAL=$?
        done
    done
    [ $RETVAL -eq 0 ] && echo_success
    [ $RETVAL -ne 0 ] && echo_failure
    echo
    if [ -e "$PIDFILE" ]; then
        rm "$PIDFILE"
    fi
    return $RETVAL
}

reload() {
    stop
    start
}

restart() {
    stop
    start
}

case "$1" in
    status)
        status
        ;;

    start)
        start
        ;;
    
    stop)
        stop
        ;;
    
    reload)
        reload
        ;;
    
    restart)
        restart
        ;;
    
    *)
        echo $"Usage: $0 {status|start|stop|reload|restart}"
        exit 1
esac

exit $?
