# Vagrantfile for creating WSO2 servers via Chef
# ----------------------------------------------------------------------------

# The management console for a given VM will be available at either URL:
#   https://localhost:CARBON_PORT
#   https://VM_IP:9443
#     default login creds are admin/admin
#
# CARBON_PORT is 9443+index ... 9443 for esb, 9444 for is, etc.

# ----------------------------------------------------------------------------
# Things that might need tweaking for your world
# ----------------------------------------------------------------------------

DOMAIN = 'wso2.local'
SUBNET = '192.168.6'
DEBUG = false   # Set to true for verbose provisioner output
MEMORY = '4096'

WSO2_COMPONENTS = %w(carbon as bam emm esb is)

Vagrant.require_version '>= 1.6.5'
VAGRANTFILE_API_VERSION = '2'

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.cache.auto_detect = true if Vagrant.has_plugin?('vagrant-cachier')
#  config.omnibus.chef_version = 'latest' if Vagrant.has_plugin?('vagrant-omnibus')
  config.berkshelf.enabled = true

  if Vagrant.has_plugin?('vagrant-hostmanager')
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = true
    config.hostmanager.include_offline = true
  end

  config.vm.box = 'chef/ubuntu-14.04'

  WSO2_COMPONENTS.each_with_index do |component, index|
    config.vm.define component do |node|
      node.vm.hostname = "#{component}.#{DOMAIN}"
      node.hostmanager.aliases = %W(#{component} wso2#{component})
      node.vm.network :private_network, ip: "#{SUBNET}.#{10 + index}"

      node.vm.provider :virtualbox do |vb|
        vb.name = node.vm.hostname
        vb.customize ["modifyvm", :id, "--memory", MEMORY]
      end

      node.vm.provision :chef_solo do |chef|
        chef.log_level = :debug if DEBUG
        chef.verbose_logging = DEBUG
        chef.environments_path = 'environments'
        chef.environment = 'development'
        chef.file_cache_path = '/vagrant/chef_file_cache'
        # chef.json = {
        #   mysql: {
        #     server_root_password: 'rootpass',
        #     server_debian_password: 'debpass',
        #     server_repl_password: 'replpass'
        #   }
        # }
        chef.roles_path = 'roles'
        chef.add_role 'login_server'
        # chef.run_list = [
        #   "recipe[wso2::#{component}]"
        # ]
      end
    end
  end
end
